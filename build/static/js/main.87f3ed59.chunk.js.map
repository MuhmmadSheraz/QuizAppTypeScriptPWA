{"version":3,"sources":["Services/quizServices.tsx","Components/QuestionCard/questionCard.tsx","Components/ResultCard/index.tsx","firebase.js","App.tsx","index.tsx"],"names":["getQuestions","totalQuestions","level","a","console","log","fetch","res","json","results","quizArray","map","x","question","options","array","incorrect_answers","concat","correct_answer","sort","Math","random","QuestionCard","current_Score","callBack","currentIteration","useState","isClicked","setIsClicked","userAnswer","setUserAnswer","mainFunction","className","dangerouslySetInnerHTML","__html","Container","Row","index","Col","sm","key","onClick","e","selectedAnswer","ResultCard","score","totalQuestion","startQuiz","setStartQuiz","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","App","iteration","setIterations","allQuestions","setAllQuestions","setScore","showResult","setShowResult","fetchindData","data","useEffect","askForPermissioToReceiveNotifications","messaging","requestPermission","getToken","token","error","body","notification","title","icon","to","checkNoti","axios","method","url","headers","then","catch","length","Swal","fire","text","correctAnswer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87f3ed59.chunk.js","sourcesContent":["import { RawQuestions, FilteredQuestions } from '../Types/quizQuestionTYpes'\r\nconst shuffleArray = (array: any[]) =>\r\n    [...array].sort(() => Math.random() - 0.5)\r\nexport const getQuestions = async (totalQuestions: number, level: string): Promise<FilteredQuestions[]> => {\r\n\r\n    console.log(\"total Questions \", totalQuestions)\r\n    const res = await fetch(\"https://opentdb.com/api.php?amount=5&category=10&difficulty=easy&type=multiple\")\r\n    let { results } = await res.json()\r\n    const quizArray: FilteredQuestions[] = results.map((x: RawQuestions) => {\r\n        return {\r\n            question: x.question,\r\n            options: shuffleArray(x.incorrect_answers.concat(x.correct_answer)),\r\n            correct_answer: x.correct_answer\r\n        }\r\n    })\r\n    return quizArray\r\n} ","import React, { useState } from \"react\";\r\nimport \"./questionCard.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { propsQuestion } from \"../../Types/quizQuestionTYpes\"\r\n\r\nexport const QuestionCard: React.FC<propsQuestion> = ({ question, options, current_Score, callBack, currentIteration }) => {\r\n  const [isClicked, setIsClicked] = useState<number>()\r\n  const [userAnswer, setUserAnswer] = useState<string>(\"\")\r\n  const stateChanged = () => {\r\n    setIsClicked(100)\r\n    setUserAnswer(\"\")\r\n  }\r\n\r\n  // Logic Here\r\n\r\n  const selectedAnswer = (x: string, index: number, e: any) => {\r\n    setUserAnswer(x)\r\n    setIsClicked(index)\r\n  }\r\n  const mainFunction = () => {\r\n    callBack(userAnswer)\r\n    stateChanged()\r\n  }\r\n\r\n  return (\r\n    <div className=\"questionCard_Wrapper\">\r\n      <div className=\"questionContent\">\r\n        <div className=\"questionStats p-1\">\r\n          <p className=\"font-weight-bold\">Easy</p>\r\n          <p>{currentIteration + 1}/5</p>\r\n        </div>\r\n        <p className=\"text-center question1 px-3\" dangerouslySetInnerHTML={{ __html: question }} />\r\n        <p className=\"text-center score\">Score : <span>{current_Score}</span> PTS</p>\r\n        <Container>\r\n          <Row className=\"m-3\">\r\n            {options.map((x, index) => {\r\n              return <Col sm=\"6\" key={index} className=\"pb-1\">\r\n                <p dangerouslySetInnerHTML={{ __html: x }}\r\n                  className={isClicked === index ? `isClicked rounded  ` : `Hello rounded `} onClick={(e) => selectedAnswer(x, index, e)} />\r\n\r\n              </Col>\r\n            })}\r\n\r\n          </Row>\r\n          <p className=\"py-3\">\r\n            <button className=\"btn-block nextBtn\" onClick={() => mainFunction()}>Next</button>\r\n          </p>\r\n        </Container>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./resultCard.css\";\r\nimport { resultScore } from \"../../Types/quizQuestionTYpes\";\r\n\r\nimport App from '../../App'\r\nexport const ResultCard: React.FC<resultScore> = ({ score, totalQuestion }) => {\r\n  \r\n  const [startQuiz, setStartQuiz] = useState<Boolean>(false)\r\n  if (startQuiz) return <App />\r\n  return (\r\n    <div className=\"resultCardWrapper\">\r\n      <div className=\"resultContent text-center\">\r\n        <div className=\"p-4\">\r\n          <span className=\" helloText text-center p-3\">\r\n            <h1 className=\"P-2\">**** Your Score **** </h1>\r\n            <h1 className=\"P-2\">{score}/{totalQuestion}</h1>\r\n            <h1 className=\"P-2\">Keep Up The Good Work</h1>\r\n            <button onClick={() => setStartQuiz(true)} className=\"restartBtn mt-2\">Restart Quiz</button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {/* <Button>Next</Button> */}\r\n    </div>\r\n  );\r\n};\r\n","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDzF3ufuKUTJwEThiUzaggUU40qy21Nqzk\",\r\n  authDomain: \"quizapptypescriptpwa.firebaseapp.com\",\r\n  databaseURL: \"https://quizapptypescriptpwa.firebaseio.com\",\r\n  projectId: \"quizapptypescriptpwa\",\r\n  storageBucket: \"quizapptypescriptpwa.appspot.com\",\r\n  messagingSenderId: \"29230227622\",\r\n  appId: \"1:29230227622:web:fc9aef0e7b5fcc1cca5467\",\r\n  measurementId: \"G-YND4GFGWYV\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nexport default firebase;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { FilteredQuestions } from './Types/quizQuestionTYpes'\nimport { getQuestions } from './Services/quizServices'\nimport { QuestionCard } from \"./Components/QuestionCard/questionCard\"\nimport { ResultCard } from \"./Components/ResultCard/index\"\nimport firebase from \"./firebase\"\nimport Swal from 'sweetalert2'\nimport axios from \"axios\"\n\n\nfunction App() {\n  let [iteration, setIterations] = useState(0)\n  let [allQuestions, setAllQuestions] = useState<FilteredQuestions[]>([])\n  const totalQuestions: number = 5;\n  let [score, setScore] = useState<number>(0)\n  let [showResult, setShowResult] = useState<Boolean>(false)\n  const [startQuiz, setStartQuiz] = useState<Boolean>(false)\n  const fetchindData = async () => {\n    const data: FilteredQuestions[] = await getQuestions(totalQuestions, \"easy\");\n    setAllQuestions(data)\n  }\n  useEffect(() => {\n    console.log(\"permision asked\")\n    askForPermissioToReceiveNotifications()\n  }, [])\n  const askForPermissioToReceiveNotifications = async () => {\n    try {\n      const messaging = firebase.messaging();\n      await messaging.requestPermission();\n      const token = await messaging.getToken();\n      console.log(\"Token===>\", token);\n\n      return token;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  let body = {\n    notification: {\n      title: \"Quiz App \",\n      body: \"Wanna Start Quiz\",\n      icon: \"http://url-to-an-icon/icon.png\",\n    },\n    to:\n      \"fXkL4tYeslJhuGBFDwx7ZQ:APA91bEOksMRSsdXXNUwCQc4ZU48yzjP_367yZYEVYFGQVeGUecE6TCaliW4YgLxi_YdExSqaOWrGPIXnMQho_uWbbUZqL7ASNLfX3JeuW8MlJWrWA_r6_bhyhzhY0_hDJen1Zgyvgrz\",\n  };\n  const checkNoti = () => {\n    axios({\n      method: 'post',\n      url: 'https://fcm.googleapis.com/fcm/send',\n      data: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"key=\" + \"AAAABs5B4KY:APA91bEUO52e84TWQy_F_Va_qN1RLiJPw9IYXRHJJT-gvCXbj7Hi6U2BaQ89aPg2q1Z-Cii-0JQbQ9U2KqLalNGHIBSLGfrfwFMind-18gxH-8Rsnvtorw7rw0dvgBXVoQf6uzhq256r\"\n      }\n    }).then((res) => {\n      console.log(res)\n    }).catch((e) => {\n      console.log(e)\n    })\n  };\n  useEffect(() => {\n    fetchindData()\n    \n  }, [])\n  useEffect(() => {\n    console.log(\"hello\")\n    checkNoti()\n    return () => {\n      checkNoti()\n    }\n  }, [])\n  const nextQuestion = (userAnswer: string) => {\n    console.log(\"user Input\", userAnswer)\n    // changeIndex()\n\n    if (userAnswer === \"\") {\n      return (Swal.fire({\n        icon: 'warning',\n        text: 'Please Select Any of Above Options',\n      }))\n    }\n    const correctAnswer = allQuestions[iteration].correct_answer;\n    if (userAnswer === correctAnswer) {\n      setScore(++score)\n      setIterations(++iteration)\n    }\n    if (userAnswer !== correctAnswer) {\n      setIterations(++iteration)\n    }\n    if (iteration === allQuestions.length) {\n      setShowResult(true)\n    }\n\n\n  }\n  if (!allQuestions.length) {\n    return (<div className=\"center text-center\" >\n      <h3 className=\" text-center\">Loading.. </h3>\n    </div>)\n  }\n  if (showResult) {\n    return <ResultCard score={score} totalQuestion={totalQuestions} />\n  }\n  if (startQuiz) {\n    return <QuestionCard\n      question={allQuestions[iteration].question\n      }\n      options={allQuestions[iteration].options}\n      current_Score={score}\n      callBack={nextQuestion}\n      currentIteration={iteration}\n\n    />\n  }\n  const startTheQuiz = () => {\n    setStartQuiz(true)\n  }\n  return (\n\n    <div className=\"App\">\n      <div className=\"mainWrapper\">\n        <div className=\"content_main\">\n          <p className=\"headerheading\">Welcome To Quiz </p>\n          \n          <button className=\"startBtn rounded-pill\" onClick={startTheQuiz}> StartQuiz</button>\n        </div>\n      </div >\n    </div >\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n// import swDev from './swDev'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// swDev();\n\n"],"sourceRoot":""}